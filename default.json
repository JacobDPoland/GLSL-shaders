{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"vec3 palette (float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n    return a + b * cos( 6.28318*(c*t + d) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;  // this somehow implicitly fixes canvas warping\n    vec2 uv0 = uv;  // copy of original coords\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 3.0; i++){\n        uv = fract(1.5 * uv) - 0.5;  // Im not sure why but fract makes the pattern repeating\n\n        float d = length(uv) * exp(-length(uv0 ));  \n        d = abs( sin(d*8. + iTime)/8. );\n        d = 0.01 / d;\n\n        vec3 col = palette(length(uv0) + iTime*0.3 + i*0.4);\n        finalColor += col * d;\n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"-1","date":"1358124981","viewed":0,"name":"","username":"None","description":"","likes":0,"hasliked":0,"tags":[],"published":0}}